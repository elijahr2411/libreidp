<?php
	include '../php/config.php';
	include '../php/settings.php';
	include '../php/bad_request.php';
	include '../php/json_error.php';
	include '../php/email.php';
	include '../php/authorization.php';

	if (!$_SERVER['HTTPS'])
		bad_request('This endpoint only supports HTTPS.');

	switch ($_SERVER['REQUEST_METHOD']) {
		case 'GET':
			echo "<!DOCTYPE html>
<html lang=\"en\">
	<head>
		<meta charset=\"utf-8\">
		<meta name=\"language\" content=\"utf-8\">
		<title>Create account</title>

		<link rel=\"stylesheet\" href=\"/css/basic.css\">
		<link rel=\"stylesheet\" href=\"/css/login.css\">
	</head>

	<script type=\"text/javascript\" src=\"/js/signup.js\"></script>
	<script type=\"text/javascript\" src=\"/js/email.js\"></script>

	<script type=\"text/javascript\">
		getSignupToken();
	</script>

	<body>
		<div class=\"loginWindow\">
			<div id=\"waitAnimation\" class=\"loginWaitAnimation\"></div>

			<img src=\"/img/libreidp-logo.png\" alt=\"LibreIdP logo\"
				width=\"150px\" height=\"80px\">

			<h1>Create account</h1>

			<p>
				Enter your e-mail address in the form below, then click <b>Next</b>
				to continue.
			</p>

			<p>
				LibreIdP will use your e-mail address to send you notifications about your
				account, LibreIdP updates, verification codes, authentication and recovery
				links.
			</p>

			<span id=\"error\" style=\"color: red\"></span>

			<input type=\"email\" id=\"email\" class=\"textBox\"
				placeholder=\"E-mail address\" oninput=\"updateSubmitButton();\"
				style=\"width: 475px;\" disabled=\"true\" /><br>
			<input type=\"button\" id=\"submit\" class=\"blueButton\" value=\"Next\"
				onclick=\"processInput();\" disabled=\"true\" />
		</div>
	</body>

	<script type=\"text/javascript\">
		function processInput() {
			document.getElementById('error').innerHTML = '';
			document.getElementById('waitAnimation').style.display = 'block';

			document.getElementById('submit').disabled = true;
			document.getElementById('email').disabled = true;

			var emailAddress = document.getElementById('email').value;

			sendSignupForm(signupToken, 'email_address=' + encodeURI(emailAddress), '/signup/verifyemail',
				function (status, description) {
					document.getElementById('waitAnimation').style.display = 'none';

					document.getElementById('email').disabled = false;
					updateSubmitButton();

					document.getElementById('email').focus();
				}
			);
		}

		function updateSubmitButton() {
			var emailAddress = document.getElementById('email').value;
			document.getElementById('submit').disabled = !isEmailAddressValid(emailAddress);
		}

		var signupToken = getSignupToken();

		document.getElementById('waitAnimation').style.display = 'none';

		document.getElementById('email').disabled = false;
		updateSubmitButton();

		document.getElementById('email').focus();
	</script>
</html>";
			break;

		case 'POST':
			if (!$signup_token = get_authorization_token())
				json_error('invalid_syntax', 'The sign-up token was not specified.');

			if (array_key_exists('email_address', $_POST))
				$email_address = $_POST['email_address'];
			else
				json_error('invalid_syntax', 'The e-mail address was not specified.');

			if (!is_email_address_valid($email_address))
				json_error('invalid_email_address', 'The specified e-mail address is not valid.');

			if (!$setting['is_public_server'] && $email_address != $setting['admin_email_address']) {
				json_error('admin_signup_required', 'Only the administrator can create an account on ' .
								"this server. Contact this server's administrator at " .
								$setting['admin_email_address'] . '.');
			}

			if (!$mysqli = mysqli_init())
				json_error('server_error', 'MySQLi could not be initialized.');

			if (!$link = $mysqli->real_connect($config['mysql_server'],
							$config['mysql_username'],
							$config['mysql_password'],
							$config['mysql_database']))
				json_error('server_error', 'Could not connect to the LibreIdP database.');

			$query = sprintf("SELECT *, UNIX_TIMESTAMP(creationTime) AS creationTimestamp
						FROM signupTokens WHERE signupToken = '%s';",
					$mysqli->real_escape_string($signup_token));
			if (!$row = mysqli_fetch_assoc($mysqli->query($query, $link))) {
				json_error('signup_token_not_found',
					'Could not find the specified sign-up token on the database.');
			}

			if (time() > $row['creationTimestamp'] + $setting['signup_token_expires_in'])
				json_error('signup_token_expired', 'The specified sign-up token expired.');

			$account_id = $row['accountId'];

			$query = sprintf("UPDATE users SET emailAddress = '%s' WHERE accountId = '%s';",
					$mysqli->real_escape_string($email_address),
					$mysqli->real_escape_string($account_id));
			if (!$mysqli->query($query, $link))
				json_error('server_error', 'Could not set the e-mail address. Try again.');

			$mysqli->close();

			header('Content-Type: application/json');
			echo '{ "status": "success" }';

			break;

		default:
			bad_request(sprintf('This endpoint only supports GET and POST, but %s was used.',
					$_SERVER['REQUEST_METHOD']));
	}
?>
